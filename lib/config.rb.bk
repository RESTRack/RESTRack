module RESTRack

  class << self
    def log; @@log; end
    def request_log; @@request_log; end
  end # of class methods

  def self.load_config(file)
    config = YAML.load_file(file)
    # Open the logs on spin up.
    @@log         ||= Logger.new( config[:LOG] )
    @@request_log ||= Logger.new( config[:REQUEST_LOG] )
    # Do config validations
    if config[:ROOT_RESOURCE_ACCEPT].is_a?(Array) and config[:ROOT_RESOURCE_ACCEPT].length == 1 and config[:ROOT_RESOURCE_ACCEPT][0].lstrip.rstrip == ''
      config[:ROOT_RESOURCE_ACCEPT] = nil
      log.warn 'Improper format for RESTRack::CONFIG[:ROOT_RESOURCE_ACCEPT], should be nil or empty array not array containing empty string.'
    end
    unless config[:DEFAULT_RESOURCE].blank? or ( not config[:ROOT_RESOURCE_ACCEPT].blank? and config[:ROOT_RESOURCE_ACCEPT].include?( config[:DEFAULT_RESOURCE] ) )
      log.warn 'RESTRack::CONFIG[:DEFAULT_RESOURCE] should be a member of RESTRack::CONFIG[:ROOT_RESOURCE_ACCEPT].'
    end
    config
  end

end
